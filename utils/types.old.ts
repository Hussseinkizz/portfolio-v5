type ProductVariants = [
  sizes: SizeVariants, // sm, m, l, xl
  colors: string[] // black, white, etc
];

enum SizeVariants {
  sm = 'small',
  md = 'medium',
  l = 'large',
  xl = 'xtra-large',
}

type Coupons = [
  coupon: {
    id: string;
    isActive: boolean;
    couponCode: string;
  }
];

type Buyer = [name: string, address: string, phone: string, email: string];

type Analytics = [
  analytics: {
    id: string;
    shop_views: number;
    shop_reviews: number; // or the reviews themselves
    record_date: string; // timestamp
  }
];

// direction or something of a sort, defaults!
// type Categories = [
//   TShirts,
//   Trousers,
//   Shoes,
//   Bags,
//   Sports Wear,
//   Kids Wear,
//   Cosmetics,
//   Lotions,
//   Maternal
// ]

export interface ShopOwner {
  id: string;
  name: string;
  branding: Brand;
  phone: string;
  whatsapp: string;
  email: string;
  address: string;
  subscriptions: Subscription;
  analytics: Analytics;
}

export interface Brand {
  shop_name: string;
  logo_url: string;
  theme: string;
  style: string;
  currency: string;
}

export interface Subscription {
  id: string;
  token: string;
  plan: string;
  is_active: boolean;
  started: string; // should be time stamp
  ends: string; // should also be a timestamp
}

export interface Order {
  id: string;
  reference: string;
  product: Product;
  status: string;
  payment: Payment;
  buyer: Buyer;
}

export interface Payment {
  id: string;
  payment_mode: string;
  status: string;
  payer: Buyer;
  beneficiary: ShopOwner;
}

export interface Product {
  id: number;
  name: string;
  vendor: ShopOwner;
  description: string;
  price: number;
  // quantity: number;
  slug: string; // generated by useMakeSlug Hook!
  variants: ProductVariants[];
  image1_Url: string;
  image2_Url: string;
  rating: number;
  reviewsCount: number; // reviews type???
  InStockCount: number;
  coupons: Coupons[];
  category: string; // grab from predefined categories
  isFeatured: boolean;
  tags: string[];
  brand: string;
}
